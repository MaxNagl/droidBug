// Colors
// @formatter:off
.colorNeutral { color: #fff; }
.colorNeutralLight { color: #a9b7c6; }
.colorPrimary { color: #cc7832; }
.colorPrimaryLight { color: #ffc66d; }
.colorSecondary { color: #9876aa; }
.colorSecondaryLight { color: #769aa5; }
.colorTernary { color: #629755; }
.colorTernaryLight { color: #00be0b; }
.colorError { color: #ee4d2e; }

.bgDark { background-color: #111111; }
.bgNormal { background: #222222; }
.bgLight { background: #444444; }
// @formatter:on

// Mixins

.flexMaxHeight {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  flex-basis: 0;
}

// General elements

* {
  padding: 0px;
  margin: 0px;
  list-style-type: none;
  text-decoration: none;
}

html {
  height: 100%;
}

body {
  .flexMaxHeight;
  .colorNeutralLight;
  height: 100%;
  .bgNormal;
}

pre {
  background: #333;
  overflow: auto;
  border: 1px solid #444;
  padding: 8px;
}

a {
  .colorSecondary;
}

#loading {
  font-size: 500%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// BugElements

.BugTabs {
  .flexMaxHeight;
  .tabBar {
    .bgLight;
    .tab {
      cursor: pointer;
      display: inline-block;
      padding: 5px 10px;
      border-bottom: 4px solid #444;
      color: #AAA;
      &.active {
        border-color: #777;
        color: #FFF;
      }
    }
  }
  .tabsContents {
    .flexMaxHeight;
    .tabsContentHolder {
      .flexMaxHeight;
      overflow: auto;
    }
  }
}

.BugSplit {
  overflow: hidden;
  .flexMaxHeight;
  .BugSplitElement {
    .flexMaxHeight;
    overflow: auto;
  }
}

.BugEntry {
  display: block;
  font-family: monospace;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  > .opener:before {
    display: inline-block;
    width: 16px;
    .colorNeutralLight;
    content: " ";
  }
  &.closed {
    > .opener:before {
      cursor: pointer;
      content: "\25BA";
    }
    .hideCollapsed {
      display: none;
    }
  }
  &.opened {
    > .opener:before {
      cursor: pointer;
      content: "\25BC";
    }
  }
}

.BugInputText {
  background-color: #111;
  border: 1px solid #444;
  display: inline-block;
  cursor: text;
  position: relative;
  white-space: pre-wrap;
  span[contenteditable=true] {
    padding: 0px 5px;
    display: inline-block;
    min-width: 5px;
    outline: none;
    &:empty:before {
      content: "\2009";
    }
  }
  &:focus-within {
    border: 1px solid #444;
  }
  .prefix {
    .colorSecondary;
    padding-left: 5px;
    &:empty {
      padding-left: 0px;
    }
  }
  .postfix {
    .colorSecondaryLight;
    padding-right: 5px;
    &:empty {
      padding-right: 0px;
    }
  }
}

// Custom formats

.paddingNormal {
  padding: 16px;
}

.autoScale {
  transform-origin: 0px 0px;
}

.groupHover {
  background-color: rgba(100, 100, 255, 0.2);
}

.layer3d {
  position: absolute;
  transform-style: preserve-3d;
  transform: translateZ(100px);

  &.groupHover {
    &:before {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      top:0;
      left:0;
      z-index: -1;   
      background-color: rgba(100, 100, 255, 0.2);
    }
  }
}

.clickable {
  cursor: pointer;
}

.entryContent {
  padding-left: 16px;
}

.preWrap {
  white-space: pre-wrap;
}

.inlineStream {
  white-space: pre-wrap;
  max-height: 200px;
  border: 1px solid #777;
  padding: 4px;
  background-color: #111;
  overflow: auto;
}

.measurePre {
  font-family: monospace;
}

.checkWithBorder {
  span {
    .colorNeutralLight
  }
  input {
    display: none;
    &:checked + span {
      .colorNeutral
    }
  }
}

.button {
  cursor: default;
  border: 1px solid #777;
  margin: 0px 4px;
  padding: 4px 12px;
  color:#FFFFFF;
  background-color: #333;
  border-radius:4px;
}

.button:hover {
  color:#000000;
  background-color:#AAA;
}

.resizeHandle {
  min-width: 4px;
  min-height: 4px;
  background-color: #666;
  touch-action: none;
  cursor: ew-resize;
  &.vertical {
    cursor: ns-resize;
  }
  > div {
    padding: 2px 8px;
  }
}

pre.console {
  border: none;
  border-bottom: 1px solid #777;
  background-color: #222;
}
.BugInputText.console {
  padding: 8px 0px;
  display:block;
  position: relative;
  font-family: monospace;
  border: none;
  outline: none;
  background-color: #111;
  &.active {
    border: none;
  }
}
.hide > .BugEntry.hideable > :not(.entryContent) {
  display: none;
}
.hide > .BugEntry.hideable > .entryContent {
  padding-left: 0px;
}

// @formatter:off
.modFilter:not(.showpublic) .modpublic{display:none}
.modFilter:not(.showprivate) .modprivate{display:none}
.modFilter:not(.showpackage) .modpackage{display:none}
.modFilter:not(.showprotected) .modprotected{display:none}
.modFilter:not(.showstatic) .modstatic{display:none}
.modFilter:not(.showfinal) .modfinal{display:none}
.modFilter:not(.showsynchronized) .modsynchronized{display:none}
.modFilter:not(.showvolatile) .modvolatile{display:none}
.modFilter:not(.showtransient) .modtransient{display:none}
.modFilter:not(.shownative) .modnative{display:none}
.modFilter:not(.showinterface) .modinterface{display:none}
.modFilter:not(.showabstract) .modabstract{display:none}
.modFilter:not(.showstrict) .modstrict{display:none}
// @formatter:on